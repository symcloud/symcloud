<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="symcloud_storage.database.metadata_manager" class="Symcloud\Component\Database\Metadata\MetadataManager">
            <argument type="service" id="sulu_security.user_repository"/>
        </service>

        <service id="symcloud_storage.database" class="Symcloud\Component\Database\Database">
            <argument type="service" id="symcloud_storage.factory" />
            <argument type="service" id="symcloud_storage.database.storage" />
            <argument type="service" id="symcloud_storage.database.search" />
            <argument type="service" id="symcloud_storage.database.metadata_manager" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="symcloud_storage.database.replicator.api.client" class="GuzzleHttp\Client"/>

        <service id="symcloud_storage.database.replicator.api" class="Symcloud\Bundle\StorageBundle\Api\SymcloudApi">
            <argument type="service" id="symcloud_storage.database.replicator.api.client" />
            <argument type="service" id="router" />
        </service>

        <service id="symcloud_storage.database.replicator" class="Symcloud\Component\Database\Replication\Replicator">
            <argument type="service" id="symcloud_storage.database.replicator.api"/>
            <argument type="service" id="symcloud_storage.database.storage" />
            <argument type="service" id="symcloud_storage.database.search" />
            <argument type="service" id="symcloud_storage.database.metadata_manager" />
            <argument type="service" id="symcloud_storage.servers.primary" />
            <argument>%symcloud_storage.servers.backups%</argument>

            <tag name="kernel.event_listener" event="symcloud.database.store" method="onStore"/>
            <tag name="kernel.event_listener" event="symcloud.database.fetch" method="onFetch"/>
        </service>
    </services>
</container>
